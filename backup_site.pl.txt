backup_site.pl


#!/usr/bin/perl

################################################################################
# Paths to Binaries
################################################################################
$ls = "/bin/ls";
$mv = "/bin/mv";
$echo = "/bin/echo";
$cat = "/bin/cat";
$tar = "/bin/tar";
$ftpget = "/usr/bin/ncftpget";
$ftpput = "/usr/bin/ncftpput";
$gunzip = "/bin/gunzip";
$gzip = "/bin/gzip";
$nice = "/bin/nice";
$mysqldump = "/usr/bin/mysqldump";
$pgsqldump = "/usr/bin/pg_dump";
$sendmail = "/usr/sbin/sendmail -t -i";
$touch = "/bin/touch";
$ps = "/bin/ps";
$grep = "/bin/grep";

################################################################################
# Setttings
################################################################################
$server_name = `hostname`;
chomp( $server_name );

if( $server_name =~ /ns(\d+)\.servepower/ ) {
        $server_num = $1;
        $ssn = $server_num;
        $server_num = "0" . $server_num if( length( $server_num ) == 1 );
        $mnt_cmd = "/bin/mount -t smbfs -o username='ns" . $ssn . "',password='0sd!p&)i" . $server_num
                . "' '//192.168.1.3/ns" . $ssn . "' /mnt/backup";
        $mysql_root_password = "sCnnj" . $server_num . "m";
}

unless( $server_num ) {
        print "*** ERROR: Cannot determine server number.\n";
        exit( 1 );
}

$backup_directory = "/mnt/backup";
$tmp_dir = "/home/tmp";
$virtual_dir = "/home/virtual";
$debug_mode = 0;

################################################################################
# Subroutines
################################################################################

sub run_cmd {
        my ($cmd) = @_;
        my $now, @date_array, $result;

        @date_array = localtime();
        $date_array[0] = '0' . $date_array[0] if( length( $date_array[0] ) == 1 );
        $date_array[1] = '0' . $date_array[1] if( length( $date_array[1] ) == 1 );
        $date_array[2] = '0' . $date_array[2] if( length( $date_array[2] ) == 1 );

        print "\t[" . $date_array[2] . ":" . $date_array[1] . ":" . $date_array[0] . "] -> " . $cmd . "\n";

        if( $debug_mode ) {
                return 0;
        }

        if( $result = system( "$cmd 2>&1" ) && $result != 512 ) {
                print "*** Error: '$cmd' returned ($result)\n";
                return $result;
        }

        return 0;
}

sub backup {
        my ($dir, $domain) = @_;

        my $real_dir = $dir;
        my $backup_name = $dir;

        if( !(-d $dir)) {
                print "*** Error: '$dir' does not exist.\n";
                return 1;
        }

        $backup_name =~ s/^\/home\/virtual/$domain/;
        $backup_name =~ s/^\///;
        $backup_name =~ s/\//\./g;

        $dir =  "${real_dir}/info " if( -d "${real_dir}/info" );
        $dir .= "${real_dir}/fst/etc " if( -d "${real_dir}/fst/etc" );
        $dir .= "${real_dir}/fst/home " if( -d "${real_dir}/fst/home" );
        $dir .= "${real_dir}/fst/var/lib " if( -d "${real_dir}/fst/var/lib" );
        $dir .= "${real_dir}/fst/var/www " if( -d "${real_dir}/fst/var/www" );
        $dir .= "${real_dir}/fst/usr/local " if( -d "${real_dir}/fst/usr/local" );
        $dir .= "${real_dir}/fst/var/log " if( -d "${real_dir}/fst/var/log" );
        $dir .= "${real_dir}/fst/var/spool " if( -d "${real_dir}/fst/var/spool" );
        $dir .= "${real_dir}/fst/var/usage " if( -d "${real_dir}/fst/var/usage" );
        $dir .= "${real_dir}/fst/var/subdomain " if( -d "${real_dir}/fst/var/subdomain" );
        $dir .= "${real_dir}/fst/usr/share/opcenter" if( -d "${real_dir}/fst/usr/share/opcenter" );

        print "\n" . "-"x79 . "\n";
        print "Creating backup of '$real_dir'\n";

        $backup_target = $backup_directory . "/" . $backup_name . ".full.tar.gz";
        # $tmp_target = $tmp_dir . "/" . $backup_name . ".full.tar.gz";

        return 1 if( run_cmd( "$nice -n 2 $tar czpf $backup_target $dir" ));
        # return 1 if( run_cmd( "$mv -f $tmp_target $backup_target" ));

        if( !( -f $backup_target) || -z $backup_target ) {
                print( "*** ERROR: '$backup_target' is not a regular file or is zero bytes.\n" );
                return 1;
        }

        return 0;
}

# Unmount and remount backup
run_cmd( "/bin/umount /mnt/backup" );
run_cmd( $mnt_cmd );

unless( -d $backup_directory ) {
        print( "*** ERROR: Cannot locate directory: '$backup_directory'\n" );
        exit( 1 );
}

unless( -d $virtual_dir ) {
        print( "*** ERROR: Cannot locate directory: '$virtual_dir'\n" );
        exit( 1 );
}

unless( -d $tmp_dir ) {
        print( "*** ERROR: Cannot locate directory: '$tmp_dir'\n" );
        exit( 1 );
}

foreach $i (`/bin/ls -lA /home/virtual`) {
        next if( $i =~ /site\d+$/ || $i =~ /admin\d+$/ );

        if( $i =~ /([\w\-\.]+)\s*\-\>\s*\/home\/virtual\/site(\d+)/ ) {
                $sites{$1} = $2;
        }
}

$site_name = $ARGV[0];

unless( $sites{$site_name} ) {
        print "Cannot determine site number from '$site_name'\n";
        exit( 1 );
}

if( backup( "$virtual_dir/site" . $sites{$site_name}, $site_name )) {
        print "*** ERROR: '$site_name' (" . $sites{$site_name} . ") backup FAILED.\n";
} else {
        print "* '$site_name' (" . $sites{$site_name} . ") backed up.\n";
}

run_cmd( "/bin/umount /mnt/backup" );
